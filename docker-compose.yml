version: "3.9"



services:
  db:
    image: postgres:16-alpine

    environment:
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 3s
      timeout: 2s
      retries: 5
    networks: [appnet]
  
  redis:

    image: redis:6-alpine 
    networks: [appnet]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 3 

  proxy:
  
      image: nginx:latest  # שימוש באימג' Nginx רשמי
      volumes:
        # **מיפוי הקובץ:** קח את הקונפיגורציה המקומית וטען אותה למיקום הנכון בתוך הקונטיינר
        - ./proxy/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      depends_on:
        - api
        - ui
      ports:
        # **חשיפה יחידה:** רק הפרוקסי חשוף לעולם החיצון (דרך פורט 80)
        - "80:80"
      networks: [appnet]
      
  api:

    build: ./api
    environment:
      DB_URL: postgres://postgres:postgres@db:5432/postgres
      REDIS_HOST: redis 
      REDIS_PORT: 6379
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks: [appnet]

  ui:

    build: ./ui
    depends_on: [api]
    networks: [appnet]

  
  prometheus:
  
      image: prom/prometheus:latest
      networks: [appnet]
      command:
        - --config.file=/etc/prometheus/prometheus.yml
        - --web.enable-lifecycle
      ports:
        - "9090:9090" # חשיפת הממשק של Prometheus לצורך בדיקה
      volumes:
        # מיפוי קובץ הקונפיגורציה שיצרנו
        - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro

      depends_on: [api]

  grafana:

    image: grafana/grafana:latest
    networks: [appnet]
    ports:
      - "3000:3000" # חשיפת ממשק Grafana
    environment:
      # הגדרות ברירת מחדל לחיבור וסיסמה
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on: [prometheus]

  loki:

    image: grafana/loki:latest
    networks: [appnet]
    ports:
      - "3100:3100" 
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./local-config.yaml:/etc/loki/local-config.yaml:ro


  promtail:
  
      image: grafana/promtail:latest
      networks: [appnet]
      command: -config.file=/etc/promtail/config.yml
      volumes:
        - ./promtail-config.yml:/etc/promtail/config.yml
        - /var/log:/var/log
        - /var/lib/docker/containers:/var/lib/docker/containers:ro
        - /var/run/docker.sock:/var/run/docker.sock:ro 
      depends_on:
        - loki
networks:
  appnet:
    driver: bridge
